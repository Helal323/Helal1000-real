module.exports = {
  config: {
    name: "uptime",
    version: "3.0",
    author: "Helal Islam",
    countDown: 5,
    role: 0,
    shortDescription: "Check bot uptime with animated loading bar",
    longDescription: "Shows how long the bot has been running with cool animated emoji loading effect.",
    category: "system",
    guide: "{pn}uptime"
  },

  onStart: async function ({ message }) {
    const startTime = process.uptime();
    const hours = Math.floor(startTime / 3600);
    const minutes = Math.floor((startTime % 3600) / 60);
    const seconds = Math.floor(startTime % 60);

    const stages = [
      "‚ñ±‚ñ±‚ñ±‚ñ±‚ñ±‚ñ± 0%",
      "‚ñ∞‚ñ±‚ñ±‚ñ±‚ñ±‚ñ± 20%",
      "‚ñ∞‚ñ∞‚ñ±‚ñ±‚ñ±‚ñ± 40%",
      "‚ñ∞‚ñ∞‚ñ∞‚ñ±‚ñ±‚ñ± 60%",
      "‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ±‚ñ± 80%",
      "‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞ 100%"
    ];

    const msg = await message.reply("‚öôÔ∏è Loading Uptime...");

    for (let i = 0; i < stages.length; i++) {
      await new Promise(res => setTimeout(res, 1000));
      await message.edit(msg.messageID, `‚öôÔ∏è Loading Uptime...\n${stages[i]}`);
    }

    const uptimeMsg = 
`‚úÖ ùóïùó¢ùóß ùó®ùó£ùóßùóúùó†ùóò ùó•ùóòùó£ùó¢ùó•ùóß  
üïí ùóßùóúùó†ùóò ùó®ùó£: ${hours}h ${minutes}m ${seconds}s  
üíæ ùó†ùóòùó†ùó¢ùó•ùó¨ ùó®ùó¶ùóòùóó: ${(process.memoryUsage().rss / 1024 / 1024).toFixed(2)} MB  
‚ö° ùó£ùó¢ùó™ùóòùó•ùóòùóó ùóïùó¨: ùêáùêûùê•ùêöùê• ùêàùê¨ùê•ùêöùê¶`;

    await new Promise(res => setTimeout(res, 800));
    await message.edit(msg.messageID, uptimeMsg);
  }
};
