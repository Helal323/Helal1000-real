<%~ includeFile("partials/header.eta", {
	user: user
}); %>
<%~ includeFile("partials/message.eta"); %>
<%~ includeFile("partials/title.eta", {
	icon: "fas fa-cog",
	title: "Dashboard"
}); %>

<style>
  /* Import Shizuka Theme */
  @import url('/css/shizuka-theme.css');
  
  /* Shizuka Dashboard Override */
  .admin-dashboard {
    background: var(--shizuka-bg-primary);
    min-height: 100vh;
    padding: 2rem 0;
    position: relative;
  }
  
  /* Shizuka Background with Hearts */
  .admin-dashboard::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: 
      url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="hearts" x="0" y="0" width="20" height="20" patternUnits="userSpaceOnUse"><path d="M10,6 C10,6 8,4 6,4 C4,4 2,6 2,8 C2,10 4,12 6,14 C8,16 10,18 10,18 C10,18 12,16 14,14 C16,12 18,10 18,8 C18,6 16,4 14,4 C12,4 10,6 10,6 Z" fill="%23f472b6" opacity="0.1"/></pattern></defs><rect width="100" height="100" fill="url(%23hearts)"/></svg>'),
      radial-gradient(circle at 20% 20%, rgba(244, 114, 182, 0.08) 0%, transparent 50%),
      radial-gradient(circle at 80% 80%, rgba(236, 72, 153, 0.08) 0%, transparent 50%),
      radial-gradient(circle at 40% 60%, rgba(0, 149, 217, 0.08) 0%, transparent 50%);
    z-index: -1;
    animation: backgroundFloat 25s ease-in-out infinite;
  }

  .dashboard-header {
    background: var(--shizuka-bg-card);
    backdrop-filter: blur(20px);
    border-radius: 25px;
    padding: 2.5rem;
    margin-bottom: 2rem;
    box-shadow: 
      0 25px 50px rgba(236, 72, 153, 0.15),
      0 0 0 1px rgba(255, 255, 255, 0.3);
    border: 2px solid rgba(244, 114, 182, 0.2);
    position: relative;
    overflow: hidden;
  }

  .dashboard-header::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: 
      radial-gradient(circle at 30% 30%, rgba(244, 114, 182, 0.1) 0%, transparent 50%),
      radial-gradient(circle at 70% 70%, rgba(236, 72, 153, 0.1) 0%, transparent 50%);
    animation: headerGlow 8s ease-in-out infinite;
    z-index: -1;
  }

  .dashboard-title {
    font-size: 3rem;
    font-weight: 800;
    background: linear-gradient(135deg, var(--shizuka-pink-600), var(--doraemon-blue));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    margin-bottom: 0.5rem;
    text-shadow: 0 4px 8px rgba(236, 72, 153, 0.3);
    position: relative;
  }

  .dashboard-title::after {
    content: '💕';
    position: absolute;
    right: -40px;
    top: 0;
    font-size: 2rem;
    animation: heartBeat 2s ease-in-out infinite;
  }

  .dashboard-subtitle {
    color: var(--shizuka-text-secondary);
    font-size: 1.2rem;
    margin-bottom: 0;
    font-weight: 500;
  }

  .search-container {
    background: rgba(255, 255, 255, 0.9);
    backdrop-filter: blur(10px);
    border-radius: 15px;
    padding: 1.5rem;
    margin-bottom: 2rem;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
  }

  .search-box {
    position: relative;
    flex: 1;
  }

  .search-input {
    border: 2px solid #e9ecef;
    border-radius: 12px;
    padding: 0.75rem 1rem 0.75rem 3rem;
    font-size: 1rem;
    transition: all 0.3s ease;
    background: rgba(255, 255, 255, 0.8);
  }

  .search-input:focus {
    border-color: #667eea;
    box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
    background: white;
  }

  .search-box-icon {
    position: absolute;
    left: 1rem;
    top: 50%;
    transform: translateY(-50%);
    color: #6c757d;
    z-index: 10;
  }

  .filter-select {
    border: 2px solid #e9ecef;
    border-radius: 12px;
    padding: 0.75rem 1rem;
    background: rgba(255, 255, 255, 0.8);
    transition: all 0.3s ease;
  }

  .filter-select:focus {
    border-color: #667eea;
    box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
  }

  .reset-btn {
    background: linear-gradient(135deg, #667eea, #764ba2);
    border: none;
    border-radius: 12px;
    padding: 0.75rem 1.5rem;
    color: white;
    font-weight: 600;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
  }

  .reset-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
    color: white;
  }

  .threads-container {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border-radius: 20px;
    padding: 2rem;
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
  }

  .thread-card {
    background: var(--shizuka-bg-card);
    border-radius: 20px;
    padding: 2rem;
    margin-bottom: 1.5rem;
    box-shadow: 
      0 10px 30px rgba(236, 72, 153, 0.1),
      0 0 0 1px rgba(255, 255, 255, 0.3);
    border: 2px solid rgba(244, 114, 182, 0.2);
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
  }

  .thread-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 5px;
    height: 100%;
    background: linear-gradient(180deg, var(--shizuka-pink-400), var(--doraemon-blue));
  }

  .thread-card:hover {
    transform: translateY(-5px);
    box-shadow: 
      0 20px 40px rgba(236, 72, 153, 0.2),
      0 0 0 1px rgba(255, 255, 255, 0.4);
  }

  .thread-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 1rem;
  }

  .thread-info h5 {
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--shizuka-text-primary);
    margin-bottom: 0.5rem;
    line-height: 1.3;
  }

  .thread-id {
    font-family: 'Courier New', monospace;
    background: linear-gradient(135deg, var(--shizuka-pink-600), var(--doraemon-blue));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    font-weight: 600;
    font-size: 0.95rem;
  }

  .thread-stats {
    display: flex;
    gap: 1rem;
    margin-top: 1rem;
  }

  .stat-item {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.75rem 1.25rem;
    background: linear-gradient(135deg, rgba(244, 114, 182, 0.1), rgba(0, 149, 217, 0.1));
    border-radius: 15px;
    color: var(--shizuka-text-secondary);
    font-weight: 600;
    border: 1px solid rgba(244, 114, 182, 0.2);
  }

  .stat-icon {
    font-size: 1.2rem;
    color: var(--doraemon-blue);
  }

  .action-btn {
    background: linear-gradient(135deg, var(--shizuka-pink-500), var(--doraemon-blue));
    border: none;
    border-radius: 15px;
    padding: 0.875rem 2rem;
    color: white;
    font-weight: 700;
    font-size: 1rem;
    text-decoration: none;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    transition: all 0.3s ease;
    box-shadow: 
      0 8px 25px rgba(236, 72, 153, 0.3),
      0 0 0 1px rgba(255, 255, 255, 0.2);
    position: relative;
    overflow: hidden;
  }

  .action-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
    transition: left 0.5s ease;
  }

  .action-btn:hover::before {
    left: 100%;
  }

  .action-btn:hover {
    transform: translateY(-3px);
    box-shadow: 
      0 15px 35px rgba(236, 72, 153, 0.4),
      0 0 0 1px rgba(255, 255, 255, 0.3);
    color: white;
    text-decoration: none;
  }

  .empty-state {
    text-align: center;
    padding: 3rem 2rem;
    color: #6c757d;
  }

  .empty-state i {
    font-size: 4rem;
    margin-bottom: 1rem;
    opacity: 0.5;
  }

  .pagination {
    justify-content: center;
    margin-top: 2rem;
  }

  .page-link {
    border-radius: 10px;
    margin: 0 0.25rem;
    border: 2px solid #e9ecef;
    color: #667eea;
    font-weight: 600;
  }

  .page-link:hover {
    background: linear-gradient(135deg, #667eea, #764ba2);
    border-color: #667eea;
    color: white;
  }

  .page-item.active .page-link {
    background: linear-gradient(135deg, #667eea, #764ba2);
    border-color: #667eea;
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .dashboard-header {
      padding: 1.5rem;
      margin-bottom: 1.5rem;
    }

    .dashboard-title {
      font-size: 2rem;
    }

    .search-container {
      padding: 1rem;
    }

    .threads-container {
      padding: 1rem;
    }

    .thread-header {
      flex-direction: column;
      gap: 1rem;
    }

    .thread-stats {
      flex-direction: column;
      gap: 0.5rem;
    }
  }

  /* Loading Animation */
  .loading {
    display: inline-block;
    width: 20px;
    height: 20px;
    border: 3px solid rgba(102, 126, 234, 0.3);
    border-radius: 50%;
    border-top-color: #667eea;
    animation: spin 1s ease-in-out infinite;
  }

  @keyframes spin {
    to { transform: rotate(360deg); }
  }

  /* Fade in animation */
  .fade-in {
    animation: fadeIn 0.5s ease-in;
  }

  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
  }
</style>

<!-- Floating Hearts Background -->
<div class="floating-hearts" id="floatingHearts"></div>

<div class="admin-dashboard">
  <div class="container">
    <div class="dashboard-header fade-in">
      <h1 class="dashboard-title">
        <i class="fas fa-heart"></i>
        Shizuka Dashboard
      </h1>
      <p class="dashboard-subtitle">Quản lý các nhóm của bạn với tình yêu và sự chăm sóc! 💕</p>
    </div>

    <div class="search-container fade-in">
      <div class="row align-items-center">
        <div class="col-lg-8 col-md-7 mb-3 mb-md-0">
          <div class="search-box">
            <input class="form-control search-input" type="search" placeholder="Tìm kiếm nhóm..." aria-label="Search" id="search-input">
            <span class="fas fa-search search-box-icon" aria-hidden="true"></span>
          </div>
        </div>
        <div class="col-lg-2 col-md-3 mb-3 mb-md-0">
          <select class="form-select filter-select w-100" id="searchBy" aria-label="Search By">
            <option value="thread_id" selected="selected">Box ID</option>
            <option value="thread_name">Tên nhóm</option>
            <option value="members">Số thành viên</option>
          </select>
        </div>
        <div class="col-lg-2 col-md-2">
          <button class="btn reset-btn w-100" id="reset-button">
            <i class="fas fa-sync"></i>
            Reset
          </button>
        </div>
      </div>
    </div>

    <div class="threads-container fade-in">
      <div data-list="" id="table-threads">
        <div class="list">
          <% if (threads.length === 0) { %>
          <div class="empty-state">
            <i class="fas fa-users"></i>
            <h4>Chưa có nhóm nào</h4>
            <p>Bạn chưa quản lý nhóm nào. Hãy thêm bot vào nhóm để bắt đầu!</p>
          </div>
          <% } else { %>
            <% for (let i=0; i < threads.length; i++) { %>
            <div class="thread-card list-item" data-thread-id="<%= threads[i].threadID %>">
              <div class="thread-header">
                <div class="thread-info">
                  <h5 class="thread_name"><%= threads[i].threadName || "Nhóm không có tên" %></h5>
                  <div class="thread-id thread_id">ID: <%= threads[i].threadID %></div>
                </div>
                <a href='/dashboard/<%=threads[i].threadID %>' class='action-btn'>
                  <i class="fa-solid fa-wrench"></i>
                  Quản lý
                </a>
              </div>
              <div class="thread-stats">
                <div class="stat-item">
                  <i class="fas fa-users stat-icon"></i>
                  <span class="members"><%= threads[i].members.filter(m=> m.inGroup).length %></span>
                  <span>thành viên</span>
                </div>
                <div class="stat-item">
                  <i class="fas fa-hashtag stat-icon"></i>
                  <span>#<%= i + 1 %></span>
                </div>
              </div>
            </div>
            <% } %>
          <% } %>
        </div>
        <ul class="pagination"></ul>
      </div>
    </div>
  </div>
</div>

  <script>
    // Enhanced Admin List Functionality
    const options = {
      valueNames: ["thread_id", "thread_name", "members"],
      page: 6,
      pagination: true,
      item: '<div class="thread-card list-item"></div>'
    };

    const listThread = new List("table-threads", options);
    const resetButton = $("#reset-button");
    const searchInput = $("#search-input");
    const searchBy = $("#searchBy");

    // Enhanced search functionality
    $("#search-input, #searchBy").on("keyup change paste", function(e) {
      const searchValue = searchInput.val();
      const searchByValue = searchBy.val();
      
      // Add loading state
      if (searchValue.length > 0) {
        $('.search-box-icon').addClass('loading');
      } else {
        $('.search-box-icon').removeClass('loading');
      }
      
      if (searchByValue) {
        listThread.search(searchValue, [searchByValue]);
      } else {
        listThread.search();
      }
      
      // Remove loading state after search
      setTimeout(() => {
        $('.search-box-icon').removeClass('loading');
      }, 300);
    });

    // Enhanced reset functionality
    resetButton.on("click", function(e) {
      searchInput.val("");
      searchBy.val("thread_id");
      listThread.search();
      
      // Add reset animation
      $(this).addClass('loading');
      setTimeout(() => {
        $(this).removeClass('loading');
      }, 500);
    });

    // Add hover effects and animations
    $(document).on('mouseenter', '.thread-card', function() {
      $(this).addClass('fade-in');
    });

    // Add click animation to action buttons
    $(document).on('click', '.action-btn', function(e) {
      const $btn = $(this);
      $btn.addClass('loading');
      
      setTimeout(() => {
        window.location.href = $btn.attr('href');
      }, 200);
    });

    // Add smooth scrolling for pagination
    $('.pagination').on('click', '.page-link', function(e) {
      e.preventDefault();
      $('html, body').animate({
        scrollTop: $('.threads-container').offset().top - 100
      }, 500);
    });

    // Add keyboard navigation
    $(document).on('keydown', function(e) {
      if (e.ctrlKey && e.key === 'k') {
        e.preventDefault();
        $('#search-input').focus();
      }
    });

    // Add search suggestions (optional enhancement)
    const searchSuggestions = [
      'Nhóm công nghệ',
      'Nhóm học tập', 
      'Nhóm bạn bè',
      'Nhóm công việc'
    ];

    // Initialize tooltips for better UX
    $('[data-bs-toggle="tooltip"]').tooltip();

    // Add real-time member count updates (if needed)
    function updateMemberCounts() {
      $('.members').each(function() {
        const count = $(this).text();
        if (count > 100) {
          $(this).closest('.stat-item').addClass('large-group');
        }
      });
    }

    updateMemberCounts();

    // Add responsive behavior
    $(window).on('resize', function() {
      if ($(window).width() < 768) {
        $('.thread-stats').addClass('mobile-stack');
      } else {
        $('.thread-stats').removeClass('mobile-stack');
      }
    });

    // Initialize responsive behavior
    $(window).trigger('resize');
    
    // Initialize floating hearts
    function createFloatingHearts() {
      const heartsContainer = document.getElementById('floatingHearts');
      const heartCount = 12;
      
      for (let i = 0; i < heartCount; i++) {
        const heart = document.createElement('div');
        heart.className = 'heart';
        heart.style.left = Math.random() * 100 + '%';
        heart.style.animationDelay = Math.random() * 20 + 's';
        heart.style.animationDuration = (Math.random() * 10 + 15) + 's';
        heartsContainer.appendChild(heart);
      }
    }
    
    // Create floating hearts on page load
    createFloatingHearts();
  </script>

  <%~ includeFile("partials/footer.eta") %>