// briddle.js
// ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶ß‡¶æ‡¶Å‡¶ß‡¶æ ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‚Äî /briddle  
// ‡¶Ö‡¶®‡ßá‡¶ï ‡¶ß‡¶æ‡¶Å‡¶ß‡¶æ ‡¶Ü‡¶õ‡ßá, ‡¶∞‡¶ø‡¶™‡ßç‡¶≤‡¶æ‡¶á ‡¶ï‡¶∞‡¶≤‡ßá ‡¶∏‡¶†‡¶ø‡¶ï/‡¶≠‡ßÅ‡¶≤ ‡¶¨‡¶≤‡ßá ‡¶¶‡ßá‡¶¨‡ßá  
// Author: Helal

const riddlesBn = [
  { q: "‡¶è‡¶ï‡¶≤‡¶æ ‡¶§‡¶æ‡¶∞‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º ‡¶®‡¶æ ‡¶¶‡ßá‡¶ñ‡¶æ, ‡¶∏‡¶ô‡ßç‡¶ó‡ßÄ ‡¶ó‡ßá‡¶≤‡ßá ‡¶¨‡¶æ‡¶Å‡¶ö‡ßá‡•§ ‡¶Ü‡¶ß‡¶æ‡¶∞ ‡¶¶‡ßá‡¶ñ‡ßá ‡¶≠‡¶Ø‡¶º‡ßá ‡¶™‡¶æ‡¶≤‡¶æ‡¶Ø‡¶º, ‡¶Ü‡¶≤‡ßã‡¶Ø‡¶º ‡¶´‡¶ø‡¶∞‡ßá ‡¶Ü‡¶∏‡ßá‡•§", a: "‡¶õ‡¶æ‡¶Ø‡¶º‡¶æ" },
  { q: "‡¶ï‡ßã‡¶•‡¶æ‡¶Ø‡¶º ‡¶®‡¶¶‡ßÄ ‡¶Ü‡¶õ‡ßá, ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ ‡¶ú‡¶≤ ‡¶®‡ßá‡¶á? ‡¶™‡¶æ‡¶π‡¶æ‡¶°‡¶º ‡¶Ü‡¶õ‡ßá, ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ ‡¶™‡¶æ‡¶•‡¶∞ ‡¶®‡ßá‡¶á? ‡¶¶‡ßá‡¶∂ ‡¶Ü‡¶õ‡ßá, ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ ‡¶Æ‡¶æ‡¶®‡ßÅ‡¶∑ ‡¶®‡ßá‡¶á?", a: "‡¶Æ‡¶æ‡¶®‡¶ö‡¶ø‡¶§‡ßç‡¶∞" },
  { q: "‡¶¨‡¶≤ ‡¶ï‡¶ø ‡¶∏‡ßá‡¶á ‡¶ú‡¶ø‡¶®‡¶ø‡¶∏, ‡¶¶‡ßá‡¶ñ‡ßã ‡¶®‡¶æ, ‡¶ï‡¶∞‡ßã ‡¶®‡¶æ, ‡¶ï‡¶æ‡¶õ‡ßá ‡¶Ü‡¶∏‡ßá ‡¶§‡¶¨‡ßá ‡¶ö‡¶≤‡ßá ‡¶Ø‡¶æ‡¶Ø‡¶º ‚Äî ‡¶∏‡ßá ‡¶ï‡ßá?", a: "‡¶õ‡¶æ‡¶Ø‡¶º‡¶æ" },
  { q: "‡¶∏‡¶ï‡¶æ‡¶≤ ‡¶â‡¶†‡ßá, ‡¶∞‡¶æ‡¶§ ‡¶Ü‡¶∏‡ßá, ‡¶•‡¶æ‡¶ï‡¶ø ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶∏‡¶Æ‡¶Ø‡¶º‡ßá‡¶∞ ‡¶ó‡¶æ‡¶®‡ßá; ‡¶®‡¶æ‡¶Æ ‡¶¨‡¶≤‡ßã ‡¶ï‡ßá?", a: "‡¶¶‡¶ø‡¶®" },
  { q: "‡¶°‡¶ø‡¶Æ ‡¶•‡ßá‡¶ï‡ßá ‡¶Ü‡¶∏‡ßá, ‡¶®‡¶æ ‡¶°‡¶ø‡¶Æ‡ßá‡¶∞ ‡¶õ‡¶æ‡¶®, ‡¶¨‡¶≤ ‡¶ï‡¶ø ‡¶π‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá ‡¶∏‡ßá ‡¶ú‡¶æ‡¶®?", a: "‡¶Æ‡ßÅ‡¶∞‡¶ó‡¶ø" },
  { q: "‡¶®‡¶æ‡¶ï‡ßá ‡¶π‡¶æ‡¶§ ‡¶†‡ßá‡¶ï‡¶æ‡¶≤‡ßá ‡¶•‡¶æ‡¶ï‡ßá, ‡¶õ‡ßÅ‡¶Å‡¶∏‡ßá ‡¶®‡¶ø‡¶Ø‡¶º‡ßá ‡¶Ø‡¶æ‡¶Ø‡¶º ‡¶¶‡ßá‡¶Ø‡¶º‡¶æ‡¶≤, ‡¶¨‡¶≤ ‡¶ï‡ßÄ?", a: "‡¶ù‡¶ø‡ßú‡¶ø" },  
  { q: "‡¶è‡¶ï ‡¶π‡¶æ‡¶§‡ßá ‡¶®‡¶æ, ‡¶¶‡ßÅ‡¶á ‡¶π‡¶æ‡¶§‡ßá ‡¶ñ‡¶æ‡¶Ø‡¶º, ‡¶§‡¶¨‡ßÅ‡¶ì ‡¶¶‡¶æ‡¶Å‡¶°‡¶º‡¶æ‡¶Ø‡¶º ‡¶®‡¶æ ‚Äî ‡¶¨‡¶≤ ‡¶§‡¶æ ‡¶ï‡¶ø?", a: "‡¶ú‡¶¨‡¶æ" },  
  { q: "‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶¶‡ßá‡¶ñ‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßã, ‡¶∏‡ßç‡¶™‡¶∞‡ßç‡¶∂ ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßã ‡¶®‡¶æ, ‡¶Ü‡¶Æ‡¶ø ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶õ‡¶æ‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶Æ‡¶§‡ßã, ‡¶¨‡¶≤ ‡¶ï‡ßá?", a: "‡¶Ü‡¶≤‡ßã" },
  { q: "‡¶ï‡ßã‡¶® ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ú‡¶ø‡¶®‡¶ø‡¶∏, ‡¶Ø‡¶§ ‡¶¨‡¶æ‡¶°‡¶º‡¶æ‡¶ì, ‡¶§‡¶§ ‡¶õ‡ßã‡¶ü ‡¶π‡¶Ø‡¶º ‚Äî ‡¶¨‡¶≤ ‡¶ï‡¶ø?", a: "‡¶ó‡¶∞‡ßç‡¶§" },
  { q: "‡¶è‡¶ï‡¶ü‡¶ø ‡¶Ö‡¶ï‡ßç‡¶∑‡¶∞ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶≤‡ßá ‡¶õ‡ßã‡¶ü ‡¶π‡¶Ø‡¶º, ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶¨‡¶≤?", a: "‡¶°‡¶ø‡¶Æ ‚Üí ‡¶°‡¶Æ" }
  // ‡¶Ü‡¶∞‡¶ì ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶∞‡¶ø‡¶°‡¶≤ ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßã
];

module.exports = {
  config: {
    name: "briddle",
    aliases: ["banglariddle", "bhojhdha"],
    version: "2.0",
    author: "Helal",
    countDown: 2,
    role: 0,
    category: "fun",
    shortDescription: { en: "Bangla Riddle ‚Äî reply answer" }
  },

  onStart: async function({ message }) {
    try {
      const item = riddlesBn[Math.floor(Math.random() * riddlesBn.length)];
      const text = `üß© ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶ß‡¶æ‡¶Å‡¶ß‡¶æ:\n\n${item.q}\n\nüëâ ‡¶â‡¶§‡ßç‡¶§‡¶∞ ‡¶¶‡¶ø‡¶§‡ßá ‡¶è‡¶á ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú‡ßá‡¶∞ ‡¶∞‡¶ø‡¶™‡ßç‡¶≤‡¶æ‡¶á ‡¶ï‡¶∞‡ßã‡•§`;
      message.reply(text, (err, info) => {
        if (info && info.messageID) {
          global.riddleSessions = global.riddleSessions || {};
          global.riddleSessions[info.messageID] = { answer: item.a, lang: "bn" };
        }
      });
    } catch (e) {
      console.error(e);
      message.reply("‚ùå ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶≠‡ßÅ‡¶≤ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá, ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßã‡•§");
    }
  },

  onReply: async function({ message, event }) {
    try {
      const repliedTo = event.messageReply?.mid || event.messageReply?.messageID;
      if (!repliedTo) return;
      const session = (global.riddleSessions && global.riddleSessions[repliedTo]);
      if (!session) return;
      const userAns = (event.body || "").trim().toLowerCase();
      const correct = (session.answer || "").toString().trim().toLowerCase();
      if (!userAns) return message.reply("‚ö†Ô∏è ‡¶â‡¶§‡ßç‡¶§‡¶∞ ‡¶≤‡¶ø‡¶ñ‡ßá ‡¶™‡¶æ‡¶†‡¶æ‡¶ì‡•§");

      if (userAns === correct || correct.includes(userAns) || userAns.includes(correct)) {
        message.reply(`‚úÖ ‡¶†‡¶ø‡¶ï ‡¶¨‡¶≤‡ßá‡¶õ! ‡¶â‡¶§‡ßç‡¶§‡¶∞ ‚Äî *${session.answer}*`);
      } else {
        message.reply(`‚ùå ‡¶≠‡ßÅ‡¶≤! ‡¶∏‡¶†‡¶ø‡¶ï ‡¶â‡¶§‡ßç‡¶§‡¶∞ ‚Äî *${session.answer}*`);
      }
      delete global.riddleSessions[repliedTo];
    } catch (err) {
      console.error(err);
    }
  }
};